
// Generated from ./LLVMLexer.g4 by ANTLR 4.13.2

#pragma once


#include "antlr4-runtime.h"




class  LLVMLexer : public antlr4::Lexer {
public:
  enum {
    LT = 1, EQSIGN = 2, GT = 3, VDASH = 4, COMMA = 5, BANG = 6, DOTS = 7, 
    LPAREN = 8, RPAREN = 9, LBRACK = 10, RBRACK = 11, LBRACE = 12, RBRACE = 13, 
    STAR = 14, ACQ_REL = 15, ACQUIRE = 16, ADD = 17, ADDRSPACE = 18, ADDRSPACECAST = 19, 
    AFN = 20, ALIAS = 21, ALIGNCOLON = 22, ALIGN = 23, ALIGNSTACK = 24, 
    ALLOCA = 25, ALLOCSIZE = 26, ALWAYSINLINE = 27, AMDGPU_CS = 28, AMDGPU_ES = 29, 
    AMDGPU_GS = 30, AMDGPU_HS = 31, AMDGPU_KERNEL = 32, AMDGPU_LS = 33, 
    AMDGPU_PS = 34, AMDGPU_VS = 35, AND = 36, ANY = 37, ANYREGCC = 38, APPENDING = 39, 
    ARCP = 40, ARGCOLON = 41, ARGMEMONLY = 42, ARM_AAPCSCC = 43, ARM_AAPCS_VFPCC = 44, 
    ARM_APCSCC = 45, ASHR = 46, ASM = 47, ATOMIC = 48, ATOMICRMW = 49, ATTRIBUTESCOLON = 50, 
    ATTRIBUTES = 51, AVAILABLE_EXTERNALLY = 52, AVR_INTRCC = 53, AVR_SIGNALCC = 54, 
    BASETYPECOLON = 55, BITCAST = 56, BLOCKADDRESS = 57, BR = 58, BUILTIN = 59, 
    BYVAL = 60, C = 61, CALL = 62, CALLER = 63, CATCH = 64, CATCHPAD = 65, 
    CATCHRET = 66, CATCHSWITCH = 67, CCCOLON = 68, CC = 69, CCC = 70, CHECKSUMCOLON = 71, 
    CHECKSUMKINDCOLON = 72, CLEANUP = 73, CLEANUPPAD = 74, CLEANUPRET = 75, 
    CMPXCHG = 76, COLD = 77, COLDCC = 78, COLUMNCOLON = 79, COMDAT = 80, 
    COMMON = 81, CONFIGMACROSCOLON = 82, CONSTANT = 83, CONTAININGTYPECOLON = 84, 
    CONTRACT = 85, CONVERGENT = 86, COUNTCOLON = 87, CXX_FAST_TLSCC = 88, 
    DATALAYOUT = 89, DEBUGINFOFORPROFILINGCOLON = 90, DECLARATIONCOLON = 91, 
    DECLARE = 92, DEFAULT = 93, DEFINE = 94, DEREFERENCEABLE = 95, DEREFERENCEABLE_OR_NULL = 96, 
    NOTDIBASICTYPE = 97, NOTDICOMPILEUNIT = 98, NOTDICOMPOSITETYPE = 99, 
    NOTDIDERIVEDTYPE = 100, NOTDIENUMERATOR = 101, NOTDIEXPRESSION = 102, 
    NOTDIFILE = 103, NOTDIGLOBALVARIABLE = 104, NOTDIGLOBALVARIABLEEXPRESSION = 105, 
    NOTDIIMPORTEDENTITY = 106, NOTDILEXICALBLOCK = 107, NOTDILEXICALBLOCKFILE = 108, 
    NOTDILOCALVARIABLE = 109, NOTDILOCATION = 110, NOTDIMACRO = 111, NOTDIMACROFILE = 112, 
    NOTDIMODULE = 113, NOTDINAMESPACE = 114, NOTDIOBJCPROPERTY = 115, DIRECTORYCOLON = 116, 
    DISCRIMINATORCOLON = 117, DISTINCT = 118, NOTDISUBPROGRAM = 119, NOTDISUBRANGE = 120, 
    NOTDISUBROUTINETYPE = 121, NOTDITEMPLATETYPEPARAMETER = 122, NOTDITEMPLATEVALUEPARAMETER = 123, 
    DLLEXPORT = 124, DLLIMPORT = 125, DOUBLE = 126, DSO_LOCAL = 127, DSO_PREEMPTABLE = 128, 
    DWARFADDRESSSPACECOLON = 129, DWOIDCOLON = 130, ELEMENTSCOLON = 131, 
    EMISSIONKINDCOLON = 132, ENCODINGCOLON = 133, ENTITYCOLON = 134, ENUMSCOLON = 135, 
    EQ = 136, EXACT = 137, EXACTMATCH = 138, EXPORTSYMBOLSCOLON = 139, EXPRCOLON = 140, 
    EXTERNAL = 141, EXTERNALLY_INITIALIZED = 142, EXTERN_WEAK = 143, EXTRACTELEMENT = 144, 
    EXTRACTVALUE = 145, EXTRADATACOLON = 146, FADD = 147, FALSE = 148, FAST = 149, 
    FASTCC = 150, FCMP = 151, FDIV = 152, FENCE = 153, FILECOLON = 154, 
    FILENAMECOLON = 155, FILTER = 156, FLAGSCOLON = 157, FLOAT = 158, FMUL = 159, 
    FP128 = 160, FPEXT = 161, FPTOSI = 162, FPTOUI = 163, FPTRUNC = 164, 
    FREM = 165, FROM = 166, FSUB = 167, FULLDEBUG = 168, GC = 169, NOTGENERICDINODE = 170, 
    GETELEMENTPTR = 171, GETTERCOLON = 172, GHCCC = 173, GLOBAL = 174, GLOBALSCOLON = 175, 
    GNUPUBNAMESCOLON = 176, HALF = 177, HEADERCOLON = 178, HHVMCC = 179, 
    HHVM_CCC = 180, HIDDEN_VISIB = 181, ICMP = 182, IDENTIFIERCOLON = 183, 
    IFUNC = 184, IMPORTSCOLON = 185, INACCESSIBLEMEMONLY = 186, INACCESSIBLEMEM_OR_ARGMEMONLY = 187, 
    INALLOCA = 188, INBOUNDS = 189, INCLUDEPATHCOLON = 190, INDIRECTBR = 191, 
    INITIALEXEC = 192, INLINEDATCOLON = 193, INLINEHINT = 194, INRANGE = 195, 
    INREG = 196, INSERTELEMENT = 197, INSERTVALUE = 198, INTELDIALECT = 199, 
    INTEL_OCL_BICC = 200, INTERNAL = 201, INTTOPTR = 202, INVOKE = 203, 
    ISDEFINITIONCOLON = 204, ISLOCALCOLON = 205, ISOPTIMIZEDCOLON = 206, 
    ISUNSIGNEDCOLON = 207, ISYSROOTCOLON = 208, JUMPTABLE = 209, LABEL = 210, 
    LANDINGPAD = 211, LANGUAGECOLON = 212, LARGEST = 213, LINECOLON = 214, 
    LINETABLESONLY = 215, LINKAGENAMECOLON = 216, LINKONCE = 217, LINKONCE_ODR = 218, 
    LOAD = 219, LOCALDYNAMIC = 220, LOCALEXEC = 221, LOCAL_UNNAMED_ADDR = 222, 
    LOWERBOUNDCOLON = 223, LSHR = 224, MACROSCOLON = 225, MAX = 226, METADATA = 227, 
    MIN = 228, MINSIZE = 229, MODULE = 230, MONOTONIC = 231, MSP430_INTRCC = 232, 
    MUL = 233, MUSTTAIL = 234, NAKED = 235, NAMECOLON = 236, NAND = 237, 
    NE = 238, NEST = 239, NINF = 240, NNAN = 241, NOALIAS = 242, NOBUILTIN = 243, 
    NOCAPTURE = 244, NODEBUG = 245, NODESCOLON = 246, NODUPLICATE = 247, 
    NODUPLICATES = 248, NOIMPLICITFLOAT = 249, NOINLINE = 250, NONE = 251, 
    NONLAZYBIND = 252, NONNULL = 253, NORECURSE = 254, NOREDZONE = 255, 
    NORETURN = 256, NOTAIL = 257, NOUNWIND = 258, NSW = 259, NSZ = 260, 
    NULL_ = 261, NUW = 262, OEQ = 263, OFFSETCOLON = 264, OGE = 265, OGT = 266, 
    OLE = 267, OLT = 268, ONE = 269, OPAQUE = 270, OPERANDSCOLON = 271, 
    OPTNONE = 272, OPTSIZE = 273, OR = 274, ORD = 275, PERSONALITY = 276, 
    PHI = 277, PPC_FP128 = 278, PREFIX = 279, PRESERVE_ALLCC = 280, PRESERVE_MOSTCC = 281, 
    PRIVATE = 282, PRODUCERCOLON = 283, PROLOGUE = 284, PROTECTED = 285, 
    PTRTOINT = 286, PTX_DEVICE = 287, PTX_KERNEL = 288, READNONE = 289, 
    READONLY = 290, REASSOC = 291, RELEASE = 292, RESUME = 293, RET = 294, 
    RETAINEDTYPESCOLON = 295, RETURNED = 296, RETURNS_TWICE = 297, RUNTIMELANGCOLON = 298, 
    RUNTIMEVERSIONCOLON = 299, SAFESTACK = 300, SAMESIZE = 301, SANITIZE_ADDRESS = 302, 
    SANITIZE_HWADDRESS = 303, SANITIZE_MEMORY = 304, SANITIZE_THREAD = 305, 
    SCOPECOLON = 306, SCOPELINECOLON = 307, SDIV = 308, SECTION = 309, SELECT = 310, 
    SEQ_CST = 311, SETTERCOLON = 312, SEXT = 313, SGE = 314, SGT = 315, 
    SHL = 316, SHUFFLEVECTOR = 317, SIDEEFFECT = 318, SIGNEXT = 319, SITOFP = 320, 
    SIZECOLON = 321, SLE = 322, SLT = 323, SOURCE_FILENAME = 324, SPECULATABLE = 325, 
    SPIR_FUNC = 326, SPIR_KERNEL = 327, SPLITDEBUGFILENAMECOLON = 328, SPLITDEBUGINLININGCOLON = 329, 
    SREM = 330, SRET = 331, SSP = 332, SSPREQ = 333, SSPSTRONG = 334, STORE = 335, 
    STRICTFP = 336, SUB = 337, SWIFTCC = 338, SWIFTERROR = 339, SWIFTSELF = 340, 
    SWITCH = 341, SYNCSCOPE = 342, TAGCOLON = 343, TAIL = 344, TARGET = 345, 
    TEMPLATEPARAMSCOLON = 346, THISADJUSTMENTCOLON = 347, THREAD_LOCAL = 348, 
    THROWNTYPESCOLON = 349, TO = 350, TOKEN = 351, TRIPLE = 352, TRUE = 353, 
    TRUNC = 354, TYPECOLON = 355, TYPE = 356, TYPESCOLON = 357, UDIV = 358, 
    UEQ = 359, UGE = 360, UGT = 361, UITOFP = 362, ULE = 363, ULT = 364, 
    UMAX = 365, UMIN = 366, UNDEF = 367, UNE = 368, UNITCOLON = 369, UNNAMED_ADDR = 370, 
    UNO = 371, UNORDERED = 372, UNREACHABLE = 373, UNWIND = 374, UREM = 375, 
    USELISTORDER = 376, USELISTORDER_BB = 377, UWTABLE = 378, VA_ARG = 379, 
    VALUECOLON = 380, VARCOLON = 381, VARIABLESCOLON = 382, VIRTUALINDEXCOLON = 383, 
    VIRTUALITYCOLON = 384, VOID = 385, VTABLEHOLDERCOLON = 386, WEAK = 387, 
    WEAK_ODR = 388, WEBKIT_JSCC = 389, WIN64CC = 390, WITHIN = 391, WRITEONLY = 392, 
    X = 393, X86_64_SYSVCC = 394, X86_FASTCALLCC = 395, X86_FP80 = 396, 
    X86_INTRCC = 397, X86_MMX = 398, X86_REGCALLCC = 399, X86_STDCALLCC = 400, 
    X86_THISCALLCC = 401, X86_VECTORCALLCC = 402, XCHG = 403, XOR = 404, 
    ZEROEXT = 405, ZEROINITIALIZER = 406, ZEXT = 407, VOLATILE = 408, COMMENT = 409, 
    WHITESPACE = 410, ATTR_GROUP_ID = 411, COMDAT_NAME = 412, METADATA_NAME = 413, 
    METADATA_ID = 414, DWARF_TAG = 415, DWARF_ATT_ENCODING = 416, DI_FLAG = 417, 
    DWARF_LANG = 418, DWARF_CC = 419, CHECKSUM_KIND = 420, DWARF_VIRTUALITY = 421, 
    DWARF_MACINFO = 422, DWARF_OP = 423, INT_LIT = 424, DECIMAL_LIT = 425, 
    DECIMALS = 426, FLOAT_LIT = 427, FRAC_LIT = 428, SIGN = 429, SCI_LIT = 430, 
    FLOAT_HEX_LIT = 431, STRING_LIT = 432, QUOTED_STRING = 433, INT_TYPE = 434, 
    NAME = 435, ESCAPE_NAME = 436, QUOTED_NAME = 437, ID = 438, GLOBAL_IDENT = 439, 
    GLOBAL_NAME = 440, GLOBAL_ID = 441, LOCAL_IDENT = 442, LOCAL_NAME = 443, 
    LOCAL_ID = 444, LABEL_IDENT = 445
  };

  explicit LLVMLexer(antlr4::CharStream *input);

  ~LLVMLexer() override;


  std::string getGrammarFileName() const override;

  const std::vector<std::string>& getRuleNames() const override;

  const std::vector<std::string>& getChannelNames() const override;

  const std::vector<std::string>& getModeNames() const override;

  const antlr4::dfa::Vocabulary& getVocabulary() const override;

  antlr4::atn::SerializedATNView getSerializedATN() const override;

  const antlr4::atn::ATN& getATN() const override;

  // By default the static state used to implement the lexer is lazily initialized during the first
  // call to the constructor. You can call this function if you wish to initialize the static state
  // ahead of time.
  static void initialize();

private:

  // Individual action functions triggered by action() above.

  // Individual semantic predicate functions triggered by sempred() above.

};

