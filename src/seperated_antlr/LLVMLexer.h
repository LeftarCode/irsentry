
// Generated from ./LLVMLexer.g4 by ANTLR 4.13.2

#pragma once


#include "antlr4-runtime.h"




class  LLVMLexer : public antlr4::Lexer {
public:
  enum {
    LT = 1, EQSIGN = 2, GT = 3, VDASH = 4, COMMA = 5, BANG = 6, DOTS = 7, 
    LPAREN = 8, RPAREN = 9, LBRACK = 10, RBRACK = 11, LBRACE = 12, RBRACE = 13, 
    STAR = 14, ACQ_REL = 15, ACQUIRE = 16, ADD = 17, ADDRSPACE = 18, ADDRSPACECAST = 19, 
    AFN = 20, ALIAS = 21, ALIGNCOLON = 22, ALIGN = 23, ALIGNSTACK = 24, 
    ALLOCA = 25, ALLOCSIZE = 26, ALWAYSINLINE = 27, AMDGPU_CS = 28, AMDGPU_ES = 29, 
    AMDGPU_GS = 30, AMDGPU_HS = 31, AMDGPU_KERNEL = 32, AMDGPU_LS = 33, 
    AMDGPU_PS = 34, AMDGPU_VS = 35, AND = 36, ANY = 37, ANYREGCC = 38, APPENDING = 39, 
    ARCP = 40, ARGCOLON = 41, ARGMEMONLY = 42, ARM_AAPCSCC = 43, ARM_AAPCS_VFPCC = 44, 
    ARM_APCSCC = 45, ASHR = 46, ASM = 47, ATOMIC = 48, ATOMICRMW = 49, ATTRIBUTESCOLON = 50, 
    ATTRIBUTES = 51, AVAILABLE_EXTERNALLY = 52, AVR_INTRCC = 53, AVR_SIGNALCC = 54, 
    BASETYPECOLON = 55, BITCAST = 56, BLOCKADDRESS = 57, BR = 58, BUILTIN = 59, 
    BYVAL = 60, C = 61, CALL = 62, CALLER = 63, CATCH = 64, CATCHPAD = 65, 
    CATCHRET = 66, CATCHSWITCH = 67, CCCOLON = 68, CC = 69, CCC = 70, CHECKSUMCOLON = 71, 
    CHECKSUMKINDCOLON = 72, CLEANUP = 73, CLEANUPPAD = 74, CLEANUPRET = 75, 
    CMPXCHG = 76, COLD = 77, COLDCC = 78, COLUMNCOLON = 79, COMDAT = 80, 
    COMMON = 81, CONFIGMACROSCOLON = 82, CONSTANT = 83, CONTAININGTYPECOLON = 84, 
    CONTRACT = 85, CONVERGENT = 86, COUNTCOLON = 87, CXX_FAST_TLSCC = 88, 
    DATALAYOUT = 89, DEBUGINFOFORPROFILINGCOLON = 90, DECLARATIONCOLON = 91, 
    DECLARE = 92, DEFAULT = 93, DEFINE = 94, DEREFERENCEABLE = 95, DEREFERENCEABLE_OR_NULL = 96, 
    NOTDIBASICTYPE = 97, NOTDICOMPILEUNIT = 98, NOTDICOMPOSITETYPE = 99, 
    NOTDIDERIVEDTYPE = 100, NOTDIENUMERATOR = 101, NOTDIEXPRESSION = 102, 
    NOTDIFILE = 103, NOTDIGLOBALVARIABLE = 104, NOTDIGLOBALVARIABLEEXPRESSION = 105, 
    NOTDIIMPORTEDENTITY = 106, NOTDILEXICALBLOCK = 107, NOTDILEXICALBLOCKFILE = 108, 
    NOTDILOCALVARIABLE = 109, NOTDILOCATION = 110, NOTDIMACRO = 111, NOTDIMACROFILE = 112, 
    NOTDIMODULE = 113, NOTDINAMESPACE = 114, NOTDIOBJCPROPERTY = 115, DIRECTORYCOLON = 116, 
    DISCRIMINATORCOLON = 117, DISTINCT = 118, NOTDISUBPROGRAM = 119, NOTDISUBRANGE = 120, 
    NOTDISUBROUTINETYPE = 121, NOTDITEMPLATETYPEPARAMETER = 122, NOTDITEMPLATEVALUEPARAMETER = 123, 
    DLLEXPORT = 124, DLLIMPORT = 125, DOUBLE = 126, DSO_LOCAL = 127, DSO_PREEMPTABLE = 128, 
    DWARFADDRESSSPACECOLON = 129, DWOIDCOLON = 130, ELEMENTSCOLON = 131, 
    EMISSIONKINDCOLON = 132, ENCODINGCOLON = 133, ENTITYCOLON = 134, ENUMSCOLON = 135, 
    EQ = 136, EXACT = 137, EXACTMATCH = 138, EXPORTSYMBOLSCOLON = 139, EXPRCOLON = 140, 
    EXTERNAL = 141, EXTERNALLY_INITIALIZED = 142, EXTERN_WEAK = 143, EXTRACTELEMENT = 144, 
    EXTRACTVALUE = 145, EXTRADATACOLON = 146, FADD = 147, FALSE = 148, FAST = 149, 
    FASTCC = 150, FCMP = 151, FDIV = 152, FENCE = 153, FILECOLON = 154, 
    FILENAMECOLON = 155, FILTER = 156, FLAGSCOLON = 157, FLOAT = 158, FMUL = 159, 
    FP128 = 160, FPEXT = 161, FPTOSI = 162, FPTOUI = 163, FPTRUNC = 164, 
    FREM = 165, FROM = 166, FSUB = 167, FULLDEBUG = 168, GC = 169, NOTGENERICDINODE = 170, 
    GETELEMENTPTR = 171, GETTERCOLON = 172, GHCCC = 173, GLOBAL = 174, GLOBALSCOLON = 175, 
    GNUPUBNAMESCOLON = 176, HALF = 177, HEADERCOLON = 178, HHVMCC = 179, 
    HHVM_CCC = 180, HIDDEN_VISIB = 181, ICMP = 182, IDENTIFIERCOLON = 183, 
    IFUNC = 184, IMPORTSCOLON = 185, INACCESSIBLEMEMONLY = 186, INACCESSIBLEMEM_OR_ARGMEMONLY = 187, 
    INALLOCA = 188, INBOUNDS = 189, INCLUDEPATHCOLON = 190, INDIRECTBR = 191, 
    INITIALEXEC = 192, INLINEDATCOLON = 193, INLINEHINT = 194, INRANGE = 195, 
    INREG = 196, INSERTELEMENT = 197, INSERTVALUE = 198, INTELDIALECT = 199, 
    INTEL_OCL_BICC = 200, INTERNAL = 201, INTTOPTR = 202, INVOKE = 203, 
    ISDEFINITIONCOLON = 204, ISLOCALCOLON = 205, ISOPTIMIZEDCOLON = 206, 
    ISUNSIGNEDCOLON = 207, ISYSROOTCOLON = 208, JUMPTABLE = 209, LABEL = 210, 
    LANDINGPAD = 211, LANGUAGECOLON = 212, LARGEST = 213, LINECOLON = 214, 
    LINETABLESONLY = 215, LINKAGENAMECOLON = 216, LINKONCE = 217, LINKONCE_ODR = 218, 
    LOAD = 219, LOCALDYNAMIC = 220, LOCALEXEC = 221, LOCAL_UNNAMED_ADDR = 222, 
    LOWERBOUNDCOLON = 223, LSHR = 224, MACROSCOLON = 225, MAX = 226, METADATA = 227, 
    MIN = 228, MINSIZE = 229, MODULE = 230, MONOTONIC = 231, MSP430_INTRCC = 232, 
    MUL = 233, MUSTTAIL = 234, NAKED = 235, NAMECOLON = 236, NAND = 237, 
    NE = 238, NEST = 239, NINF = 240, NNAN = 241, NOALIAS = 242, NOBUILTIN = 243, 
    NOCAPTURE = 244, NODEBUG = 245, NODESCOLON = 246, NODUPLICATE = 247, 
    NODUPLICATES = 248, NOIMPLICITFLOAT = 249, NOINLINE = 250, NONE = 251, 
    NONLAZYBIND = 252, NONNULL = 253, NORECURSE = 254, NOREDZONE = 255, 
    NORETURN = 256, NOTAIL = 257, NOUNDEF = 258, NOUNWIND = 259, NSW = 260, 
    NSZ = 261, NULL_ = 262, NUW = 263, OEQ = 264, OFFSETCOLON = 265, OGE = 266, 
    OGT = 267, OLE = 268, OLT = 269, ONE = 270, OPAQUE = 271, OPERANDSCOLON = 272, 
    OPTNONE = 273, OPTSIZE = 274, OR = 275, ORD = 276, PERSONALITY = 277, 
    PHI = 278, PPC_FP128 = 279, PREFIX = 280, PRESERVE_ALLCC = 281, PRESERVE_MOSTCC = 282, 
    PRIVATE = 283, PRODUCERCOLON = 284, PROLOGUE = 285, PROTECTED = 286, 
    PTRTOINT = 287, PTX_DEVICE = 288, PTX_KERNEL = 289, READNONE = 290, 
    READONLY = 291, REASSOC = 292, RELEASE = 293, RESUME = 294, RET = 295, 
    RETAINEDTYPESCOLON = 296, RETURNED = 297, RETURNS_TWICE = 298, RUNTIMELANGCOLON = 299, 
    RUNTIMEVERSIONCOLON = 300, SAFESTACK = 301, SAMESIZE = 302, SANITIZE_ADDRESS = 303, 
    SANITIZE_HWADDRESS = 304, SANITIZE_MEMORY = 305, SANITIZE_THREAD = 306, 
    SCOPECOLON = 307, SCOPELINECOLON = 308, SDIV = 309, SECTION = 310, SELECT = 311, 
    SEQ_CST = 312, SETTERCOLON = 313, SEXT = 314, SGE = 315, SGT = 316, 
    SHL = 317, SHUFFLEVECTOR = 318, SIDEEFFECT = 319, SIGNEXT = 320, SITOFP = 321, 
    SIZECOLON = 322, SLE = 323, SLT = 324, SOURCE_FILENAME = 325, SPECULATABLE = 326, 
    SPIR_FUNC = 327, SPIR_KERNEL = 328, SPLITDEBUGFILENAMECOLON = 329, SPLITDEBUGINLININGCOLON = 330, 
    SREM = 331, SRET = 332, SSP = 333, SSPREQ = 334, SSPSTRONG = 335, STORE = 336, 
    STRICTFP = 337, SUB = 338, SWIFTCC = 339, SWIFTERROR = 340, SWIFTSELF = 341, 
    SWITCH = 342, SYNCSCOPE = 343, TAGCOLON = 344, TAIL = 345, TARGET = 346, 
    TEMPLATEPARAMSCOLON = 347, THISADJUSTMENTCOLON = 348, THREAD_LOCAL = 349, 
    THROWNTYPESCOLON = 350, TO = 351, TOKEN = 352, TRIPLE = 353, TRUE = 354, 
    TRUNC = 355, TYPECOLON = 356, TYPE = 357, TYPESCOLON = 358, UDIV = 359, 
    UEQ = 360, UGE = 361, UGT = 362, UITOFP = 363, ULE = 364, ULT = 365, 
    UMAX = 366, UMIN = 367, UNDEF = 368, UNE = 369, UNITCOLON = 370, UNNAMED_ADDR = 371, 
    UNO = 372, UNORDERED = 373, UNREACHABLE = 374, UNWIND = 375, UREM = 376, 
    USELISTORDER = 377, USELISTORDER_BB = 378, UWTABLE = 379, VA_ARG = 380, 
    VALUECOLON = 381, VARCOLON = 382, VARIABLESCOLON = 383, VIRTUALINDEXCOLON = 384, 
    VIRTUALITYCOLON = 385, VOID = 386, VTABLEHOLDERCOLON = 387, WEAK = 388, 
    WEAK_ODR = 389, WEBKIT_JSCC = 390, WIN64CC = 391, WITHIN = 392, WRITEONLY = 393, 
    X = 394, X86_64_SYSVCC = 395, X86_FASTCALLCC = 396, X86_FP80 = 397, 
    X86_INTRCC = 398, X86_MMX = 399, X86_REGCALLCC = 400, X86_STDCALLCC = 401, 
    X86_THISCALLCC = 402, X86_VECTORCALLCC = 403, XCHG = 404, XOR = 405, 
    ZEROEXT = 406, ZEROINITIALIZER = 407, ZEXT = 408, VOLATILE = 409, COMMENT = 410, 
    WHITESPACE = 411, ATTR_GROUP_ID = 412, COMDAT_NAME = 413, METADATA_NAME = 414, 
    METADATA_ID = 415, DWARF_TAG = 416, DWARF_ATT_ENCODING = 417, DI_FLAG = 418, 
    DWARF_LANG = 419, DWARF_CC = 420, CHECKSUM_KIND = 421, DWARF_VIRTUALITY = 422, 
    DWARF_MACINFO = 423, DWARF_OP = 424, INT_LIT = 425, DECIMAL_LIT = 426, 
    DECIMALS = 427, FLOAT_LIT = 428, FRAC_LIT = 429, SIGN = 430, SCI_LIT = 431, 
    FLOAT_HEX_LIT = 432, STRING_LIT = 433, QUOTED_STRING = 434, INT_TYPE = 435, 
    NAME = 436, ESCAPE_NAME = 437, QUOTED_NAME = 438, ID = 439, GLOBAL_IDENT = 440, 
    GLOBAL_NAME = 441, GLOBAL_ID = 442, LOCAL_IDENT = 443, LOCAL_NAME = 444, 
    LOCAL_ID = 445, LABEL_IDENT = 446
  };

  explicit LLVMLexer(antlr4::CharStream *input);

  ~LLVMLexer() override;


  std::string getGrammarFileName() const override;

  const std::vector<std::string>& getRuleNames() const override;

  const std::vector<std::string>& getChannelNames() const override;

  const std::vector<std::string>& getModeNames() const override;

  const antlr4::dfa::Vocabulary& getVocabulary() const override;

  antlr4::atn::SerializedATNView getSerializedATN() const override;

  const antlr4::atn::ATN& getATN() const override;

  // By default the static state used to implement the lexer is lazily initialized during the first
  // call to the constructor. You can call this function if you wish to initialize the static state
  // ahead of time.
  static void initialize();

private:

  // Individual action functions triggered by action() above.

  // Individual semantic predicate functions triggered by sempred() above.

};

