
// Generated from ./LLVMLexer.g4 by ANTLR 4.13.2

#pragma once


#include "antlr4-runtime.h"




class  LLVMLexer : public antlr4::Lexer {
public:
  enum {
    LT = 1, EQSIGN = 2, GT = 3, VDASH = 4, COMMA = 5, BANG = 6, DOTS = 7, 
    LPAREN = 8, RPAREN = 9, LBRACK = 10, RBRACK = 11, LBRACE = 12, RBRACE = 13, 
    STAR = 14, ACQ_REL = 15, ACQUIRE = 16, ADD = 17, ADDRSPACE = 18, ADDRSPACECAST = 19, 
    AFN = 20, ALIAS = 21, ALIGNCOLON = 22, ALIGN = 23, ALIGNSTACK = 24, 
    ALLOCA = 25, ALLOCSIZE = 26, ALWAYSINLINE = 27, AMDGPU_CS = 28, AMDGPU_ES = 29, 
    AMDGPU_GS = 30, AMDGPU_HS = 31, AMDGPU_KERNEL = 32, AMDGPU_LS = 33, 
    AMDGPU_PS = 34, AMDGPU_VS = 35, AND = 36, ANY = 37, ANYREGCC = 38, APPENDING = 39, 
    ARCP = 40, ARGCOLON = 41, ARGMEMONLY = 42, ARM_AAPCSCC = 43, ARM_AAPCS_VFPCC = 44, 
    ARM_APCSCC = 45, ASHR = 46, ASM = 47, ATOMIC = 48, ATOMICRMW = 49, ATTRIBUTESCOLON = 50, 
    ATTRIBUTES = 51, AVAILABLE_EXTERNALLY = 52, AVR_INTRCC = 53, AVR_SIGNALCC = 54, 
    BASETYPECOLON = 55, BITCAST = 56, BLOCKADDRESS = 57, BR = 58, BUILTIN = 59, 
    BYVAL = 60, C = 61, CALL = 62, CALLER = 63, CATCH = 64, CATCHPAD = 65, 
    CATCHRET = 66, CATCHSWITCH = 67, CCCOLON = 68, CC = 69, CCC = 70, CHECKSUMCOLON = 71, 
    CHECKSUMKINDCOLON = 72, CLEANUP = 73, CLEANUPPAD = 74, CLEANUPRET = 75, 
    CMPXCHG = 76, COLD = 77, COLDCC = 78, COLUMNCOLON = 79, COMDAT = 80, 
    COMMON = 81, CONFIGMACROSCOLON = 82, CONSTANT = 83, CONTAININGTYPECOLON = 84, 
    CONTRACT = 85, CONVERGENT = 86, COUNTCOLON = 87, CXX_FAST_TLSCC = 88, 
    DATALAYOUT = 89, DEBUGINFOFORPROFILINGCOLON = 90, DECLARATIONCOLON = 91, 
    DECLARE = 92, DEFAULT = 93, DEFINE = 94, DEREFERENCEABLE = 95, DEREFERENCEABLE_OR_NULL = 96, 
    NOTDIBASICTYPE = 97, NOTDICOMPILEUNIT = 98, NOTDICOMPOSITETYPE = 99, 
    NOTDIDERIVEDTYPE = 100, NOTDIENUMERATOR = 101, NOTDIEXPRESSION = 102, 
    NOTDIFILE = 103, NOTDIGLOBALVARIABLE = 104, NOTDIGLOBALVARIABLEEXPRESSION = 105, 
    NOTDIIMPORTEDENTITY = 106, NOTDILEXICALBLOCK = 107, NOTDILEXICALBLOCKFILE = 108, 
    NOTDILOCALVARIABLE = 109, NOTDILOCATION = 110, NOTDIMACRO = 111, NOTDIMACROFILE = 112, 
    NOTDIMODULE = 113, NOTDINAMESPACE = 114, NOTDIOBJCPROPERTY = 115, DIRECTORYCOLON = 116, 
    DISCRIMINATORCOLON = 117, DISTINCT = 118, NOTDISUBPROGRAM = 119, NOTDISUBRANGE = 120, 
    NOTDISUBROUTINETYPE = 121, NOTDITEMPLATETYPEPARAMETER = 122, NOTDITEMPLATEVALUEPARAMETER = 123, 
    DLLEXPORT = 124, DLLIMPORT = 125, DOUBLE = 126, DSO_LOCAL = 127, DSO_PREEMPTABLE = 128, 
    DWARFADDRESSSPACECOLON = 129, DWOIDCOLON = 130, ELEMENTSCOLON = 131, 
    EMISSIONKINDCOLON = 132, ENCODINGCOLON = 133, ENTITYCOLON = 134, ENUMSCOLON = 135, 
    EQ = 136, EXACT = 137, EXACTMATCH = 138, EXPORTSYMBOLSCOLON = 139, EXPRCOLON = 140, 
    EXTERNAL = 141, EXTERNALLY_INITIALIZED = 142, EXTERN_WEAK = 143, EXTRACTELEMENT = 144, 
    EXTRACTVALUE = 145, EXTRADATACOLON = 146, FADD = 147, FALSE = 148, FAST = 149, 
    FASTCC = 150, FCMP = 151, FDIV = 152, FENCE = 153, FILECOLON = 154, 
    FILENAMECOLON = 155, FILTER = 156, FLAGSCOLON = 157, FLOAT = 158, FMUL = 159, 
    FP128 = 160, FPEXT = 161, FPTOSI = 162, FPTOUI = 163, FPTRUNC = 164, 
    FREM = 165, FROM = 166, FSUB = 167, FULLDEBUG = 168, GC = 169, NOTGENERICDINODE = 170, 
    GETELEMENTPTR = 171, GETTERCOLON = 172, GHCCC = 173, GLOBAL = 174, GLOBALSCOLON = 175, 
    GNUPUBNAMESCOLON = 176, HALF = 177, HEADERCOLON = 178, HHVMCC = 179, 
    HHVM_CCC = 180, HIDDEN_VISIB = 181, ICMP = 182, IDENTIFIERCOLON = 183, 
    IFUNC = 184, IMPORTSCOLON = 185, INACCESSIBLEMEMONLY = 186, INACCESSIBLEMEM_OR_ARGMEMONLY = 187, 
    INALLOCA = 188, INBOUNDS = 189, INCLUDEPATHCOLON = 190, INDIRECTBR = 191, 
    INITIALEXEC = 192, INLINEDATCOLON = 193, INLINEHINT = 194, INRANGE = 195, 
    INREG = 196, INSERTELEMENT = 197, INSERTVALUE = 198, INTELDIALECT = 199, 
    INTEL_OCL_BICC = 200, INTERNAL = 201, INTTOPTR = 202, INVOKE = 203, 
    ISDEFINITIONCOLON = 204, ISLOCALCOLON = 205, ISOPTIMIZEDCOLON = 206, 
    ISUNSIGNEDCOLON = 207, ISYSROOTCOLON = 208, JUMPTABLE = 209, LABEL = 210, 
    LANDINGPAD = 211, LANGUAGECOLON = 212, LARGEST = 213, LINECOLON = 214, 
    LINETABLESONLY = 215, LINKAGENAMECOLON = 216, LINKONCE = 217, LINKONCE_ODR = 218, 
    LOAD = 219, LOCALDYNAMIC = 220, LOCALEXEC = 221, LOCAL_UNNAMED_ADDR = 222, 
    LOWERBOUNDCOLON = 223, LSHR = 224, MACROSCOLON = 225, MAX = 226, METADATA = 227, 
    MIN = 228, MINSIZE = 229, MODULE = 230, MONOTONIC = 231, MSP430_INTRCC = 232, 
    MUL = 233, MUSTTAIL = 234, NAKED = 235, NAMECOLON = 236, NAND = 237, 
    NE = 238, NEST = 239, NINF = 240, NNAN = 241, NOALIAS = 242, NOBUILTIN = 243, 
    NOCAPTURE = 244, NODEBUG = 245, NODESCOLON = 246, NODUPLICATE = 247, 
    NODUPLICATES = 248, NOIMPLICITFLOAT = 249, NOINLINE = 250, NONE = 251, 
    NONLAZYBIND = 252, NONNULL = 253, NORECURSE = 254, NOREDZONE = 255, 
    NORETURN = 256, NOTAIL = 257, NOUNDEF = 258, NOUNWIND = 259, NSW = 260, 
    NSZ = 261, NULL_ = 262, NUW = 263, OEQ = 264, OFFSETCOLON = 265, OGE = 266, 
    OGT = 267, OLE = 268, OLT = 269, ONE = 270, OPAQUE = 271, OPERANDSCOLON = 272, 
    OPTNONE = 273, OPTSIZE = 274, OR = 275, ORD = 276, PERSONALITY = 277, 
    PHI = 278, POISON = 279, PPC_FP128 = 280, PREFIX = 281, PRESERVE_ALLCC = 282, 
    PRESERVE_MOSTCC = 283, PRIVATE = 284, PRODUCERCOLON = 285, PROLOGUE = 286, 
    PROTECTED = 287, PTR = 288, PTRTOINT = 289, PTX_DEVICE = 290, PTX_KERNEL = 291, 
    READNONE = 292, READONLY = 293, REASSOC = 294, RELEASE = 295, RESUME = 296, 
    RET = 297, RETAINEDTYPESCOLON = 298, RETURNED = 299, RETURNS_TWICE = 300, 
    RUNTIMELANGCOLON = 301, RUNTIMEVERSIONCOLON = 302, SAFESTACK = 303, 
    SAMESIZE = 304, SANITIZE_ADDRESS = 305, SANITIZE_HWADDRESS = 306, SANITIZE_MEMORY = 307, 
    SANITIZE_THREAD = 308, SCOPECOLON = 309, SCOPELINECOLON = 310, SDIV = 311, 
    SECTION = 312, SELECT = 313, SEQ_CST = 314, SETTERCOLON = 315, SEXT = 316, 
    SGE = 317, SGT = 318, SHL = 319, SHUFFLEVECTOR = 320, SIDEEFFECT = 321, 
    SIGNEXT = 322, SITOFP = 323, SIZECOLON = 324, SLE = 325, SLT = 326, 
    SOURCE_FILENAME = 327, SPECULATABLE = 328, SPIR_FUNC = 329, SPIR_KERNEL = 330, 
    SPLITDEBUGFILENAMECOLON = 331, SPLITDEBUGINLININGCOLON = 332, SREM = 333, 
    SRET = 334, SSP = 335, SSPREQ = 336, SSPSTRONG = 337, STORE = 338, STRICTFP = 339, 
    SUB = 340, SWIFTCC = 341, SWIFTERROR = 342, SWIFTSELF = 343, SWITCH = 344, 
    SYNCSCOPE = 345, TAGCOLON = 346, TAIL = 347, TARGET = 348, TEMPLATEPARAMSCOLON = 349, 
    THISADJUSTMENTCOLON = 350, THREAD_LOCAL = 351, THROWNTYPESCOLON = 352, 
    TO = 353, TOKEN = 354, TRIPLE = 355, TRUE = 356, TRUNC = 357, TYPECOLON = 358, 
    TYPE = 359, TYPESCOLON = 360, UDIV = 361, UEQ = 362, UGE = 363, UGT = 364, 
    UITOFP = 365, ULE = 366, ULT = 367, UMAX = 368, UMIN = 369, UNDEF = 370, 
    UNE = 371, UNITCOLON = 372, UNNAMED_ADDR = 373, UNO = 374, UNORDERED = 375, 
    UNREACHABLE = 376, UNWIND = 377, UREM = 378, USELISTORDER = 379, USELISTORDER_BB = 380, 
    UWTABLE = 381, VA_ARG = 382, VALUECOLON = 383, VARCOLON = 384, VARIABLESCOLON = 385, 
    VIRTUALINDEXCOLON = 386, VIRTUALITYCOLON = 387, VOID = 388, VTABLEHOLDERCOLON = 389, 
    WEAK = 390, WEAK_ODR = 391, WEBKIT_JSCC = 392, WIN64CC = 393, WITHIN = 394, 
    WRITEONLY = 395, X = 396, X86_64_SYSVCC = 397, X86_FASTCALLCC = 398, 
    X86_FP80 = 399, X86_INTRCC = 400, X86_MMX = 401, X86_REGCALLCC = 402, 
    X86_STDCALLCC = 403, X86_THISCALLCC = 404, X86_VECTORCALLCC = 405, XCHG = 406, 
    XOR = 407, ZEROEXT = 408, ZEROINITIALIZER = 409, ZEXT = 410, VOLATILE = 411, 
    COMMENT = 412, WHITESPACE = 413, ATTR_GROUP_ID = 414, COMDAT_NAME = 415, 
    METADATA_NAME = 416, METADATA_ID = 417, DWARF_TAG = 418, DWARF_ATT_ENCODING = 419, 
    DI_FLAG = 420, DWARF_LANG = 421, DWARF_CC = 422, CHECKSUM_KIND = 423, 
    DWARF_VIRTUALITY = 424, DWARF_MACINFO = 425, DWARF_OP = 426, INT_LIT = 427, 
    DECIMAL_LIT = 428, DECIMALS = 429, FLOAT_LIT = 430, FRAC_LIT = 431, 
    SIGN = 432, SCI_LIT = 433, FLOAT_HEX_LIT = 434, STRING_LIT = 435, QUOTED_STRING = 436, 
    INT_TYPE = 437, NAME = 438, ESCAPE_NAME = 439, QUOTED_NAME = 440, ID = 441, 
    GLOBAL_IDENT = 442, GLOBAL_NAME = 443, GLOBAL_ID = 444, LOCAL_IDENT = 445, 
    LOCAL_NAME = 446, LOCAL_ID = 447, LABEL_IDENT = 448
  };

  explicit LLVMLexer(antlr4::CharStream *input);

  ~LLVMLexer() override;


  std::string getGrammarFileName() const override;

  const std::vector<std::string>& getRuleNames() const override;

  const std::vector<std::string>& getChannelNames() const override;

  const std::vector<std::string>& getModeNames() const override;

  const antlr4::dfa::Vocabulary& getVocabulary() const override;

  antlr4::atn::SerializedATNView getSerializedATN() const override;

  const antlr4::atn::ATN& getATN() const override;

  // By default the static state used to implement the lexer is lazily initialized during the first
  // call to the constructor. You can call this function if you wish to initialize the static state
  // ahead of time.
  static void initialize();

private:

  // Individual action functions triggered by action() above.

  // Individual semantic predicate functions triggered by sempred() above.

};

