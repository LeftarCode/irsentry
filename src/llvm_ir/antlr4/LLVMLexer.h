
// Generated from ./LLVMLexer.g4 by ANTLR 4.13.2

#pragma once


#include "antlr4-runtime.h"




class  LLVMLexer : public antlr4::Lexer {
public:
  enum {
    LT = 1, EQSIGN = 2, GT = 3, VDASH = 4, COMMA = 5, BANG = 6, DOTS = 7, 
    LPAREN = 8, RPAREN = 9, LBRACK = 10, RBRACK = 11, LBRACE = 12, RBRACE = 13, 
    STAR = 14, ACQ_REL = 15, ACQUIRE = 16, ADD = 17, ADDRSPACE = 18, ADDRSPACECAST = 19, 
    AFN = 20, ALIAS = 21, ALIGNCOLON = 22, ALIGN = 23, ALIGNSTACK = 24, 
    ALLOCA = 25, ALLOCSIZE = 26, ALWAYSINLINE = 27, AMDGPU_CS = 28, AMDGPU_ES = 29, 
    AMDGPU_GS = 30, AMDGPU_HS = 31, AMDGPU_KERNEL = 32, AMDGPU_LS = 33, 
    AMDGPU_PS = 34, AMDGPU_VS = 35, AND = 36, ANY = 37, ANYREGCC = 38, APPENDING = 39, 
    ARCP = 40, ARGCOLON = 41, ARGMEM = 42, ARGMEMONLY = 43, ARM_AAPCSCC = 44, 
    ARM_AAPCS_VFPCC = 45, ARM_APCSCC = 46, ASHR = 47, ASM = 48, ATOMIC = 49, 
    ATOMICRMW = 50, ATTRIBUTESCOLON = 51, ATTRIBUTES = 52, AVAILABLE_EXTERNALLY = 53, 
    AVR_INTRCC = 54, AVR_SIGNALCC = 55, BASETYPECOLON = 56, BITCAST = 57, 
    BLOCKADDRESS = 58, BR = 59, BUILTIN = 60, BYVAL = 61, C = 62, CALL = 63, 
    CALLER = 64, CATCH = 65, CATCHPAD = 66, CATCHRET = 67, CATCHSWITCH = 68, 
    CCCOLON = 69, CC = 70, CCC = 71, CHECKSUMCOLON = 72, CHECKSUMKINDCOLON = 73, 
    CLEANUP = 74, CLEANUPPAD = 75, CLEANUPRET = 76, CMPXCHG = 77, COLD = 78, 
    COLDCC = 79, COLON = 80, COLUMNCOLON = 81, COMDAT = 82, COMMON = 83, 
    CONFIGMACROSCOLON = 84, CONSTANT = 85, CONTAININGTYPECOLON = 86, CONTRACT = 87, 
    CONVERGENT = 88, COUNTCOLON = 89, CXX_FAST_TLSCC = 90, DATALAYOUT = 91, 
    DEBUGINFOFORPROFILINGCOLON = 92, DECLARATIONCOLON = 93, DECLARE = 94, 
    DEFAULT = 95, DEFINE = 96, DEREFERENCEABLE = 97, DEREFERENCEABLE_OR_NULL = 98, 
    ERRNOMEM = 99, NOTDIBASICTYPE = 100, NOTDICOMPILEUNIT = 101, NOTDICOMPOSITETYPE = 102, 
    NOTDIDERIVEDTYPE = 103, NOTDIENUMERATOR = 104, NOTDIEXPRESSION = 105, 
    NOTDIFILE = 106, NOTDIGLOBALVARIABLE = 107, NOTDIGLOBALVARIABLEEXPRESSION = 108, 
    NOTDIIMPORTEDENTITY = 109, NOTDILEXICALBLOCK = 110, NOTDILEXICALBLOCKFILE = 111, 
    NOTDILOCALVARIABLE = 112, NOTDILOCATION = 113, NOTDIMACRO = 114, NOTDIMACROFILE = 115, 
    NOTDIMODULE = 116, NOTDINAMESPACE = 117, NOTDIOBJCPROPERTY = 118, DIRECTORYCOLON = 119, 
    DISCRIMINATORCOLON = 120, DISTINCT = 121, NOTDISUBPROGRAM = 122, NOTDISUBRANGE = 123, 
    NOTDISUBROUTINETYPE = 124, NOTDITEMPLATETYPEPARAMETER = 125, NOTDITEMPLATEVALUEPARAMETER = 126, 
    DLLEXPORT = 127, DLLIMPORT = 128, DOUBLE = 129, DSO_LOCAL = 130, DSO_PREEMPTABLE = 131, 
    DWARFADDRESSSPACECOLON = 132, DWOIDCOLON = 133, ELEMENTSCOLON = 134, 
    EMISSIONKINDCOLON = 135, ENCODINGCOLON = 136, ENTITYCOLON = 137, ENUMSCOLON = 138, 
    EQ = 139, EXACT = 140, EXACTMATCH = 141, EXPORTSYMBOLSCOLON = 142, EXPRCOLON = 143, 
    EXTERNAL = 144, EXTERNALLY_INITIALIZED = 145, EXTERN_WEAK = 146, EXTRACTELEMENT = 147, 
    EXTRACTVALUE = 148, EXTRADATACOLON = 149, FADD = 150, FALSE = 151, FAST = 152, 
    FASTCC = 153, FCMP = 154, FDIV = 155, FENCE = 156, FILECOLON = 157, 
    FILENAMECOLON = 158, FILTER = 159, FLAGSCOLON = 160, FLOAT = 161, FMUL = 162, 
    FP128 = 163, FPEXT = 164, FPTOSI = 165, FPTOUI = 166, FPTRUNC = 167, 
    FREM = 168, FROM = 169, FSUB = 170, FULLDEBUG = 171, GC = 172, NOTGENERICDINODE = 173, 
    GETELEMENTPTR = 174, GETTERCOLON = 175, GHCCC = 176, GLOBAL = 177, GLOBALSCOLON = 178, 
    GNUPUBNAMESCOLON = 179, HALF = 180, HEADERCOLON = 181, HHVMCC = 182, 
    HHVM_CCC = 183, HIDDEN_VISIB = 184, ICMP = 185, IDENTIFIERCOLON = 186, 
    IFUNC = 187, IMPORTSCOLON = 188, INACCESSIBLEMEM = 189, INACCESSIBLEMEMONLY = 190, 
    INACCESSIBLEMEM_OR_ARGMEMONLY = 191, INALLOCA = 192, INBOUNDS = 193, 
    INCLUDEPATHCOLON = 194, INDIRECTBR = 195, INITIALEXEC = 196, INLINEDATCOLON = 197, 
    INLINEHINT = 198, INRANGE = 199, INREG = 200, INSERTELEMENT = 201, INSERTVALUE = 202, 
    INTELDIALECT = 203, INTEL_OCL_BICC = 204, INTERNAL = 205, INTTOPTR = 206, 
    INVOKE = 207, ISDEFINITIONCOLON = 208, ISLOCALCOLON = 209, ISOPTIMIZEDCOLON = 210, 
    ISUNSIGNEDCOLON = 211, ISYSROOTCOLON = 212, JUMPTABLE = 213, LABEL = 214, 
    LANDINGPAD = 215, LANGUAGECOLON = 216, LARGEST = 217, LINECOLON = 218, 
    LINETABLESONLY = 219, LINKAGENAMECOLON = 220, LINKONCE = 221, LINKONCE_ODR = 222, 
    LOAD = 223, LOCALDYNAMIC = 224, LOCALEXEC = 225, LOCAL_UNNAMED_ADDR = 226, 
    LOWERBOUNDCOLON = 227, LSHR = 228, MACROSCOLON = 229, MAX = 230, MEMORY = 231, 
    METADATA = 232, MIN = 233, MINSIZE = 234, MODULE = 235, MONOTONIC = 236, 
    MSP430_INTRCC = 237, MUL = 238, MUSTTAIL = 239, NAKED = 240, NAMECOLON = 241, 
    NAND = 242, NE = 243, NEST = 244, NINF = 245, NNAN = 246, NOALIAS = 247, 
    NOBUILTIN = 248, NOCAPTURE = 249, NODEBUG = 250, NODESCOLON = 251, NODUPLICATE = 252, 
    NODUPLICATES = 253, NOIMPLICITFLOAT = 254, NOINLINE = 255, NONE = 256, 
    NONLAZYBIND = 257, NONNULL = 258, NORECURSE = 259, NOREDZONE = 260, 
    NORETURN = 261, NOTAIL = 262, NOUNDEF = 263, NOUNWIND = 264, NSW = 265, 
    NSZ = 266, NULL_ = 267, NUW = 268, OEQ = 269, OFFSETCOLON = 270, OGE = 271, 
    OGT = 272, OLE = 273, OLT = 274, ONE = 275, OPAQUE = 276, OPERANDSCOLON = 277, 
    OPTNONE = 278, OPTSIZE = 279, OR = 280, ORD = 281, PERSONALITY = 282, 
    PHI = 283, POISON = 284, PPC_FP128 = 285, PREFIX = 286, PRESERVE_ALLCC = 287, 
    PRESERVE_MOSTCC = 288, PRIVATE = 289, PRODUCERCOLON = 290, PROLOGUE = 291, 
    PROTECTED = 292, PTR = 293, PTRTOINT = 294, PTX_DEVICE = 295, PTX_KERNEL = 296, 
    READ = 297, READNONE = 298, READONLY = 299, READWRITE = 300, REASSOC = 301, 
    RELEASE = 302, RESUME = 303, RET = 304, RETAINEDTYPESCOLON = 305, RETURNED = 306, 
    RETURNS_TWICE = 307, RUNTIMELANGCOLON = 308, RUNTIMEVERSIONCOLON = 309, 
    SAFESTACK = 310, SAMESIZE = 311, SANITIZE_ADDRESS = 312, SANITIZE_HWADDRESS = 313, 
    SANITIZE_MEMORY = 314, SANITIZE_THREAD = 315, SCOPECOLON = 316, SCOPELINECOLON = 317, 
    SDIV = 318, SECTION = 319, SELECT = 320, SEQ_CST = 321, SETTERCOLON = 322, 
    SEXT = 323, SGE = 324, SGT = 325, SHL = 326, SHUFFLEVECTOR = 327, SIDEEFFECT = 328, 
    SIGNEXT = 329, SITOFP = 330, SIZECOLON = 331, SLE = 332, SLT = 333, 
    SOURCE_FILENAME = 334, SPECULATABLE = 335, SPIR_FUNC = 336, SPIR_KERNEL = 337, 
    SPLITDEBUGFILENAMECOLON = 338, SPLITDEBUGINLININGCOLON = 339, SREM = 340, 
    SRET = 341, SSP = 342, SSPREQ = 343, SSPSTRONG = 344, STORE = 345, STRICTFP = 346, 
    SUB = 347, SWIFTCC = 348, SWIFTERROR = 349, SWIFTSELF = 350, SWITCH = 351, 
    SYNCSCOPE = 352, TAGCOLON = 353, TAIL = 354, TARGET = 355, TEMPLATEPARAMSCOLON = 356, 
    THISADJUSTMENTCOLON = 357, THREAD_LOCAL = 358, THROWNTYPESCOLON = 359, 
    TO = 360, TOKEN = 361, TRIPLE = 362, TRUE = 363, TRUNC = 364, TYPECOLON = 365, 
    TYPE = 366, TYPESCOLON = 367, UDIV = 368, UEQ = 369, UGE = 370, UGT = 371, 
    UITOFP = 372, ULE = 373, ULT = 374, UMAX = 375, UMIN = 376, UNDEF = 377, 
    UNE = 378, UNITCOLON = 379, UNNAMED_ADDR = 380, UNO = 381, UNORDERED = 382, 
    UNREACHABLE = 383, UNWIND = 384, UREM = 385, USELISTORDER = 386, USELISTORDER_BB = 387, 
    UWTABLE = 388, VA_ARG = 389, VALUECOLON = 390, VARCOLON = 391, VARIABLESCOLON = 392, 
    VIRTUALINDEXCOLON = 393, VIRTUALITYCOLON = 394, VOID = 395, VTABLEHOLDERCOLON = 396, 
    WEAK = 397, WEAK_ODR = 398, WEBKIT_JSCC = 399, WILLRETURN = 400, WIN64CC = 401, 
    WITHIN = 402, WRITE = 403, WRITEONLY = 404, X = 405, X86_64_SYSVCC = 406, 
    X86_FASTCALLCC = 407, X86_FP80 = 408, X86_INTRCC = 409, X86_MMX = 410, 
    X86_REGCALLCC = 411, X86_STDCALLCC = 412, X86_THISCALLCC = 413, X86_VECTORCALLCC = 414, 
    XCHG = 415, XOR = 416, ZEROEXT = 417, ZEROINITIALIZER = 418, ZEXT = 419, 
    VOLATILE = 420, COMMENT = 421, WHITESPACE = 422, ATTR_GROUP_ID = 423, 
    COMDAT_NAME = 424, METADATA_NAME = 425, METADATA_ID = 426, DWARF_TAG = 427, 
    DWARF_ATT_ENCODING = 428, DI_FLAG = 429, DWARF_LANG = 430, DWARF_CC = 431, 
    CHECKSUM_KIND = 432, DWARF_VIRTUALITY = 433, DWARF_MACINFO = 434, DWARF_OP = 435, 
    INT_LIT = 436, DECIMAL_LIT = 437, DECIMALS = 438, FLOAT_LIT = 439, FRAC_LIT = 440, 
    SIGN = 441, SCI_LIT = 442, FLOAT_HEX_LIT = 443, STRING_LIT = 444, QUOTED_STRING = 445, 
    INT_TYPE = 446, NAME = 447, ESCAPE_NAME = 448, QUOTED_NAME = 449, ID = 450, 
    GLOBAL_IDENT = 451, GLOBAL_NAME = 452, GLOBAL_ID = 453, LOCAL_IDENT = 454, 
    LOCAL_NAME = 455, LOCAL_ID = 456, LABEL_IDENT = 457
  };

  explicit LLVMLexer(antlr4::CharStream *input);

  ~LLVMLexer() override;


  std::string getGrammarFileName() const override;

  const std::vector<std::string>& getRuleNames() const override;

  const std::vector<std::string>& getChannelNames() const override;

  const std::vector<std::string>& getModeNames() const override;

  const antlr4::dfa::Vocabulary& getVocabulary() const override;

  antlr4::atn::SerializedATNView getSerializedATN() const override;

  const antlr4::atn::ATN& getATN() const override;

  // By default the static state used to implement the lexer is lazily initialized during the first
  // call to the constructor. You can call this function if you wish to initialize the static state
  // ahead of time.
  static void initialize();

private:

  // Individual action functions triggered by action() above.

  // Individual semantic predicate functions triggered by sempred() above.

};

